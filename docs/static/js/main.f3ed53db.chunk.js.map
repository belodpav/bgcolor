{"version":3,"sources":["blocks/Input/Input.js","blocks/Button/Button.js","blocks/App/App.js","blocks/ColorController/ColorController.js","index.js"],"names":["Input","_ref","className","onChange","placeholder","value","validate","mixs","split","cls","concat","push","react_default","a","createElement","join","Button","children","onClick","App","_this$state","this","state","firstColor","secondColor","linearGradient","isHEX","onSubmit","onChangeFirstColor","onChangeSecondColor","appWrapperStyle","background","style","blocks_Input_Input","blocks_Button_Button","ColorController","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","target","getLinearGradient","isValid","direction","s","test","Component","ReactDOM","render","blocks_App_App","document","querySelector"],"mappings":"6RA6BeA,eA1BD,SAAAC,GAMR,IALJC,EAKID,EALJC,UACAC,EAIIF,EAJJE,SACAC,EAGIH,EAHJG,YACAC,EAEIJ,EAFJI,MACAC,EACIL,EADJK,SAEMC,EAAOL,EAAUM,MAAM,KACzBC,EAAM,CAAC,SAASC,OAAOH,GAM3B,OAJKD,EAASD,IACZI,EAAIE,KAAK,eAITC,EAAAC,EAAAC,cAAA,OAAKZ,UAAWO,EAAIM,KAAK,MACvBH,EAAAC,EAAAC,cAAA,SACEZ,UAAU,gBACVG,MAAOA,EACPF,SAAUA,EACVC,YAAaA,OCdNY,SANA,SAAAf,GAAA,IAAEgB,EAAFhB,EAAEgB,SAAUC,EAAZjB,EAAYiB,QAAZ,OACbN,EAAAC,EAAAC,cAAA,UAAQI,QAASA,EAAShB,UAAU,UACjCe,KCsCUE,mLAnCJ,IAAAC,EAC2CC,KAAKC,MAAhDC,EADAH,EACAG,WAAYC,EADZJ,EACYI,YAAaC,EADzBL,EACyBK,eAE9BC,EAIEL,KAJFK,MACAC,EAGEN,KAHFM,SACAC,EAEEP,KAFFO,mBACAC,EACER,KADFQ,oBAGIC,EAAkB,CACtBC,WAAYN,GAGd,OACEb,EAAAC,EAAAC,cAAA,OAAKZ,UAAU,cAAc8B,MAAOF,GAClClB,EAAAC,EAAAC,cAAA,OAAKZ,UAAU,gBACbU,EAAAC,EAAAC,cAACmB,EAAD,CACE/B,UAAU,oBACVG,MAAOkB,EACPpB,SAAUyB,EACVtB,SAAUoB,IAEZd,EAAAC,EAAAC,cAACmB,EAAD,CACE/B,UAAU,oBACVG,MAAOmB,EACPrB,SAAU0B,EACVvB,SAAUoB,IAEZd,EAAAC,EAAAC,cAACoB,EAAD,CAAQhB,QAASS,GAAjB,2BCjCR,SAAAQ,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAc,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAArB,KAAMe,KAYRR,mBAAqB,SAACe,GACpBN,EAAKO,SAAS,CAAErB,WAAYoB,EAAEE,OAAOxC,SAdpBgC,EAiBnBR,oBAAsB,SAACc,GACrBN,EAAKO,SAAS,CAAEpB,YAAamB,EAAEE,OAAOxC,SAlBrBgC,EAqBnBV,SAAW,WAAM,IAAAP,EACmBiB,EAAKf,MAAhCC,EADQH,EACRG,WAAYC,EADJJ,EACII,YAEnBa,EAAKO,SAAS,CACZnB,eAAgBY,EAAKS,kBAAkB,YAAavB,EAAYC,MAzBjD,IAGVD,EAA2Ba,EAA3Bb,WAAYC,EAAeY,EAAfZ,YAHF,OAKjBa,EAAKf,MAAQ,CACXC,aACAC,cACAuB,QAASV,EAAKX,MAAMH,IAAec,EAAKX,MAAMF,GAC9CC,eAAgBY,EAAKS,kBAAkB,YAAavB,EAAYC,IATjDa,iFAqCDW,EAAWzB,EAAYC,GACvC,yBAAAd,OAA0BsC,EAA1B,MAAAtC,OAAwCa,EAAxC,MAAAb,OAAuDc,EAAvD,mCASIyB,GAGJ,MAFgB,qCAEDC,KAAKD,UAnDME,oBCK9BC,IAASC,OACPzC,EAAAC,EAAAC,cAACwC,EAAD,CACE/B,WAAW,UACXC,YAAY,YAEd+B,SAASC,cAAc","file":"static/js/main.f3ed53db.chunk.js","sourcesContent":["import React from 'react';\nimport './Input.css';\n\nconst Input = ({\n  className,\n  onChange,\n  placeholder,\n  value,\n  validate\n}) => {\n  const mixs = className.split(' ');\n  let cls = ['Input'].concat(mixs);\n  \n  if (!validate(value)) {\n    cls.push('Input_error');\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        className=\"Input-Control\"\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport './Button.css';\n\nconst Button = ({children, onClick}) => (\n  <button onClick={onClick} className='Button'>\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport './App.css';\n\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport ColorController from '../ColorController/ColorController';\n\nclass App extends ColorController {\n  render() {\n    const {firstColor, secondColor, linearGradient} = this.state;\n    const {\n      isHEX,\n      onSubmit,\n      onChangeFirstColor,\n      onChangeSecondColor\n    } = this;\n\n    const appWrapperStyle = {\n      background: linearGradient\n    };\n\n    return (\n      <div className=\"App-Wrapper\" style={appWrapperStyle}>\n        <div className=\"App-Controls\">\n          <Input\n            className=\"App-ControlsInput\"\n            value={firstColor}\n            onChange={onChangeFirstColor}\n            validate={isHEX}\n          />\n          <Input\n            className=\"App-ControlsInput\"\n            value={secondColor}\n            onChange={onChangeSecondColor}\n            validate={isHEX}\n          />\n          <Button onClick={onSubmit}>Go</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { Component } from 'react';\n\nclass ColorController extends Component {\n  constructor(props) {\n    super(props);\n  \n    const {firstColor, secondColor} = props;\n\n    this.state = {\n      firstColor,\n      secondColor,\n      isValid: this.isHEX(firstColor) && this.isHEX(secondColor),\n      linearGradient: this.getLinearGradient('to bottom', firstColor, secondColor)\n    }\n  }\n\n  onChangeFirstColor = (e) => {\n    this.setState({ firstColor: e.target.value })\n  }\n\n  onChangeSecondColor = (e) => {\n    this.setState({ secondColor: e.target.value })\n  }\n\n  onSubmit = () => {\n    const {firstColor, secondColor} = this.state;\n\n    this.setState({\n      linearGradient: this.getLinearGradient('to bottom', firstColor, secondColor)\n    })\n  }\n  /**\n   * Returns linear-gradient correct value for css\n   * property\n   *\n   * @param {String} direction \n   * @param {String} firstColor \n   * @param {String} secondColor \n   * @return {String}\n   */\n  getLinearGradient(direction, firstColor, secondColor) {\n    return `linear-gradient(${direction}, ${firstColor}, ${secondColor})`;\n  }\n\n  /**\n   * Returns true if s is correct hex code\n   *\n   * @param {String} s \n   * @return {boolean}\n   */\n  isHEX(s) {\n    const pattern = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n\n    return pattern.test(s);\n  }\n}\n\nexport default ColorController;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './blocks/App/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App\n    firstColor=\"#ffffff\"\n    secondColor=\"#4f0070\"\n  />,\n  document.querySelector('.App')\n);\n"],"sourceRoot":""}